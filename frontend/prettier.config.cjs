module.exports = {
    //* Определяет, нужно ли использовать скобки вокруг единственного параметра стрелочной функции.
    //+ Значение "avoid" означает, что скобки будут опущены, если у функции только один параметр.
    //+ Значение "always" означает, что скобки должны всегда присутствовать вокруг единственного параметра стрелочной функции.
    //+ Значение "always-multiline" означает, что скобки должны присутствовать вокруг единственного параметра стрелочной функции только в том случае, если параметр занимает несколько строк. Если параметр помещается в одну строку, то скобки будут опущены.
    arrowParens: "avoid",

    //* Указывает, должны ли закрывающиеся фигурные скобки быть на той же строке, что и последний элемент блока кода.
    bracketSameLine: false,

    //* Определяет, должен ли быть пробел между открывающейся скобкой и первым элементом, а также между последним элементом и закрывающейся скобкой.
    bracketSpacing: true,

    //* Указывает, должен ли Prettier форматировать вложенные языки, такие как HTML, CSS или JavaScript, автоматически.
    //+ Значение "auto" означает, что форматирование будет определяться на основе конфигурации проекта.
    //+ Значение "off" означает, что Prettier не будет форматировать вложенные языки. В этом случае форматирование вложенного кода будет оставаться без изменений, и Prettier будет считать его частью текста, который не требует форматирования.
    //+ Значение "preserve" означает, что Prettier будет сохранять исходное форматирование вложенных языков. В этом режиме Prettier не будет вносить изменения в форматирование кода внутри вложенных языков, и оно будет оставаться неизменным.
    embeddedLanguageFormatting: "auto",

    //* Определяет, как Prettier должен обрабатывать чувствительность к пробелам внутри тегов HTML.
    //+ Значение "css" означает, что Prettier будет форматировать пробелы внутри тегов HTML в соответствии с правилами CSS.
    //+ Значение "strict" означает, что Prettier будет удалять все пробельные символы внутри HTML-кода, включая отступы, пустые строки, пробелы между атрибутами и пробелы внутри содержимого тегов.
    //+ Значение "ignore" означает, что Prettier будет игнорировать пробельные символы внутри HTML-кода и сохранять их в точности так, как они были в исходном файле.
    htmlWhitespaceSensitivity: "css",

    //* Указывает, должен ли Prettier добавлять специальный комментарий-прагму в верхней части форматируемых файлов.
    insertPragma: false,

    //* Определяет, должна ли закрывающаяся угловая скобка в JSX быть на той же строке, что и последний элемент JSX.
    jsxBracketSameLine: false,

    //* Указывает, должны ли в JSX использоваться одинарные кавычки для строковых значений.
    jsxSingleQuote: false,

    //* Определяет максимальную ширину строки, после которой Prettier будет переносить код на следующую строку.
    printWidth: 80,

    //* Определяет, как Prettier будет обрабатывать текст, не являющийся кодом, например комментарии или строки документации.
    //+ Значение "preserve" означает, что Prettier будет сохранять исходное форматирование.
    //+ Значение "wrap" означает, что Prettier будет автоматически переносить строки в текстовых блоках, если они превышают максимальную ширину, указанную в параметре "printWidth".
    //+ Значение "always" означает, что Prettier будет всегда переносить строки в текстовых блоках, даже если они могут поместиться на одной строке.
    proseWrap: "preserve",

    //* Определяет, когда Prettier будет использовать кавычки для свойств объектов.
    //+ Значение "as-needed" означает, что кавычки будут добавляться только в тех случаях, когда имя свойства содержит специальные символы или пробелы.
    //+ Значение "consistent" означает, что что Prettier будет использовать один стиль кавычек для всех свойств объекта.
    //+ Значение "consistent-as-needed" означает, что Prettier будет использовать один стиль кавычек для свойств, но будет использовать кавычки только там, где это необходимо для правильного отображения значений свойств.
    quoteProps: "as-needed",

    //* Указывает, должен ли Prettier форматировать только файлы, содержащие специальный комментарий-прагму в верхней части.
    requirePragma: false,

    //* Определяет, должны ли точки с запятой быть добавлены в конце выражений.
    semi: true,

    //* Указывает, должен ли Prettier размещать каждый атрибут JSX на отдельной строке.
    singleAttributePerLine: true,

    //* Определяет, должны ли в JavaScript и TypeScript использоваться одинарные кавычки для строковых значений.
    singleQuote: false,

    //* Устанавливает количество пробелов, эквивалентных одной табуляции.
    tabWidth: 4,

    //* Определяет, должна ли запятая быть добавлена после последнего элемента в списке или объекте.
    //+ Значение "none" означает, что запятая не будет добавлена.
    //+ Значение "es5" означает, что Prettier будет добавлять запятые в конце списков и объектных литералов, согласно стандарту ECMAScript 5 (ES5).
    //+ Значение "all" означает, что Prettier будет добавлять запятые в конце списков и объектных литералов во всех случаях, даже если это не требуется стандартом.
    trailingComma: "none",

    //* Указывает, должны ли отступы быть выполнены с помощью табуляции или пробелов.
    useTabs: false,

    //* Определяет, должен ли Prettier использовать отступы внутри секций <script> и <style> в файлах Vue.js.
    vueIndentScriptAndStyle: false
};
